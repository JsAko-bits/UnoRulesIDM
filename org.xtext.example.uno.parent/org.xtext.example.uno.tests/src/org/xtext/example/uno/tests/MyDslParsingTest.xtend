/*
 * generated by Xtext 2.23.0
 */
package org.xtext.example.uno.tests

import com.google.inject.Inject
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.extensions.InjectionExtension
import org.eclipse.xtext.testing.util.ParseHelper
import org.junit.jupiter.api.Assertions
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.^extension.ExtendWith
import org.xtext.example.uno.myDsl.Model

@ExtendWith(InjectionExtension)
@InjectWith(MyDslInjectorProvider)
class MyDslParsingTest {
	@Inject
	ParseHelper<Model> parseHelper
	
	@Test
	def void loadModel() {
		val result = parseHelper.parse('''
			Objectif: Classique
			2 joueurs
			Règlement {Possibilité de cumuler la carte +2 Possibilité de jouer 2 cartes identiques simultanément}
		''')
		Assertions.assertNotNull(result)
		val errors = result.eResource.errors
		Assertions.assertTrue(errors.isEmpty, '''Unexpected errors: «errors.join(", ")»''')
		
		val UnoGenerator ug = new UnoGenerator(result);
		val UnoToJson utj = new UnoToJson(result);
		println(ug.generate)
		utj.transform
	}
}
