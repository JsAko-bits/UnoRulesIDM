/**
 * generated by Xtext 2.23.0
 */
package org.xtext.example.uno.myDsl.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EDataTypeEList;

import org.xtext.example.uno.myDsl.Joueur;
import org.xtext.example.uno.myDsl.MyDslPackage;
import org.xtext.example.uno.myDsl.Objectif;
import org.xtext.example.uno.myDsl.Regle;
import org.xtext.example.uno.myDsl.Rule;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Rule</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.uno.myDsl.impl.RuleImpl#getObjectif <em>Objectif</em>}</li>
 *   <li>{@link org.xtext.example.uno.myDsl.impl.RuleImpl#getJoueur <em>Joueur</em>}</li>
 *   <li>{@link org.xtext.example.uno.myDsl.impl.RuleImpl#getRegle <em>Regle</em>}</li>
 * </ul>
 *
 * @generated
 */
public class RuleImpl extends MinimalEObjectImpl.Container implements Rule
{
  /**
   * The default value of the '{@link #getObjectif() <em>Objectif</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getObjectif()
   * @generated
   * @ordered
   */
  protected static final Objectif OBJECTIF_EDEFAULT = Objectif.UNO_CHALLENGE;

  /**
   * The cached value of the '{@link #getObjectif() <em>Objectif</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getObjectif()
   * @generated
   * @ordered
   */
  protected Objectif objectif = OBJECTIF_EDEFAULT;

  /**
   * The default value of the '{@link #getJoueur() <em>Joueur</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getJoueur()
   * @generated
   * @ordered
   */
  protected static final Joueur JOUEUR_EDEFAULT = Joueur.DEUX;

  /**
   * The cached value of the '{@link #getJoueur() <em>Joueur</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getJoueur()
   * @generated
   * @ordered
   */
  protected Joueur joueur = JOUEUR_EDEFAULT;

  /**
   * The cached value of the '{@link #getRegle() <em>Regle</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRegle()
   * @generated
   * @ordered
   */
  protected EList<Regle> regle;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected RuleImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.RULE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Objectif getObjectif()
  {
    return objectif;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setObjectif(Objectif newObjectif)
  {
    Objectif oldObjectif = objectif;
    objectif = newObjectif == null ? OBJECTIF_EDEFAULT : newObjectif;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.RULE__OBJECTIF, oldObjectif, objectif));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Joueur getJoueur()
  {
    return joueur;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setJoueur(Joueur newJoueur)
  {
    Joueur oldJoueur = joueur;
    joueur = newJoueur == null ? JOUEUR_EDEFAULT : newJoueur;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.RULE__JOUEUR, oldJoueur, joueur));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Regle> getRegle()
  {
    if (regle == null)
    {
      regle = new EDataTypeEList<Regle>(Regle.class, this, MyDslPackage.RULE__REGLE);
    }
    return regle;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.RULE__OBJECTIF:
        return getObjectif();
      case MyDslPackage.RULE__JOUEUR:
        return getJoueur();
      case MyDslPackage.RULE__REGLE:
        return getRegle();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.RULE__OBJECTIF:
        setObjectif((Objectif)newValue);
        return;
      case MyDslPackage.RULE__JOUEUR:
        setJoueur((Joueur)newValue);
        return;
      case MyDslPackage.RULE__REGLE:
        getRegle().clear();
        getRegle().addAll((Collection<? extends Regle>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.RULE__OBJECTIF:
        setObjectif(OBJECTIF_EDEFAULT);
        return;
      case MyDslPackage.RULE__JOUEUR:
        setJoueur(JOUEUR_EDEFAULT);
        return;
      case MyDslPackage.RULE__REGLE:
        getRegle().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.RULE__OBJECTIF:
        return objectif != OBJECTIF_EDEFAULT;
      case MyDslPackage.RULE__JOUEUR:
        return joueur != JOUEUR_EDEFAULT;
      case MyDslPackage.RULE__REGLE:
        return regle != null && !regle.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (objectif: ");
    result.append(objectif);
    result.append(", joueur: ");
    result.append(joueur);
    result.append(", regle: ");
    result.append(regle);
    result.append(')');
    return result.toString();
  }

} //RuleImpl
